# vim: fdm=marker
# はじめに {{{
# prefixキーをC-qに変更
set -g prefix C-s
bind C-s send-prefix
# C-bのキーバインドを解除
unbind C-b
# マウス操作を有効にする
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
# }}}
# 起動 {{{
# tmux起動時のシェルをzshにする
# 以下はうまく行かなかったやり方（原因不明）
# set-option -g default-command "reattach-to-user-namespace -l $(which fish)"
set-option -g default-shell "/bin/zsh"
# set-option -g default-command "fish"
# tmuxを256色表示できるようにする
set-option -g default-terminal screen-256color
set -g terminal-overrides 'xterm:colors=256'
# }}}
# ステータスバーのレイアウト {{{
# ステータスバーの色を設定する
set-option -g status-bg "colour108"
# status line の文字色を指定する。
set-option -g status-fg "colour235"
# ステータスバーをトップに配置する
set-option -g status-position top
# status-left
set-option -g status-left-length 90
set-option -g status-left "#[fg=colour229,bg=colour66] Session: #S #[default]"
# status-left の最大の長さを指定する。
set-option -g status-left-length 20
# status-right
set-option -g status-right-length 50
# Wi-Fi、バッテリー残量、現在時刻を最右に表示
set-option -g status-right '#[fg=colour229,bg=colour66] #h %Y-%m-%d(%a) %H:%M#[default]'
# set -g automatic-rename on
# set -g window-status-format         '#I:#(basename #{pane_current_path})#F'
# set -g window-status-current-format '#I:#(basename #{pane_current_path})#F'
# window-status のフォーマットを指定する。
set-window-option -g window-status-format " [#I]#(basename #{pane_current_path}): #W#F "
# カレントウィンドウの window-status のフォーマットを指定する
set-window-option -g window-status-current-format "#[fg=colour229,bg=colour24,bold] [#I]#(basename #{pane_current_path}): #W#F "
# set -g window-status-format         '#I:#{?#{m:#W,fish},#(basename #{pane_current_path}),#W}#F'
# set -g window-status-current-format '#I:#{?#{m:#W,fish},#(basename #{pane_current_path}),#W}#F'
# ステータスバーを1秒毎に描画し直す
set-option -g status-interval 1
# センタライズ（主にウィンドウ番号など）
set-option -g status-justify centre
## アクティブなペインのみ白っぽく変更（真っ黒は232）
# set -g window-style 'bg=colour239'
# set -g window-active-style 'bg=colour234'
# }}}
# ウィンドウ，ペイン関連のショートカット {{{
# vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
# | でペインを縦分割する
bind | split-window -h
bind v split-window -h
# - でペインを縦分割する
bind _ split-window -v
# new window, kill-pane ショートカット
bind t new-window
bind q kill-pane
# }}}
# コピーモード {{{
# コピーモードでvimキーバインドを使う
setw -g mode-keys vi
# 'v' で選択を始める
bind -T copy-mode-vi v send -X begin-selection
# 'V' で行選択
bind -T copy-mode-vi V send -X select-line
# 'C-v' で矩形選択
bind -T copy-mode-vi C-v send -X rectangle-toggle
# 'y' でヤンク
bind -T copy-mode-vi y send -X copy-selection
# 'Y' で行ヤンク
bind -T copy-mode-vi Y send -X copy-line
# 'C-p'でペースト
# bind-key C-p paste-buffer
# }}}
# その他 {{{
# esc 遅延をなくす
set-option -s escape-time 0
# 番号基準値を変更
set-option -g base-index 1
# }}}
