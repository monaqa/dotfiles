[user]
    email = cmonaqa@gmail.com
    name = monaqa
    signingkey = /Users/monaqa/.ssh/id_rsa.pub
[github]
    user = monaqa

[tig "color"] cursor = yellow red bold

[remote]
    pushDefault = origin

[commit]
    template = /Users/monaqa/.commit_template
    verbose = true
    gpgsign = true

[core]
    pager = delta
    editor = nvim

[delta]
    dark = true
    line-numbers = true

[interactive]
    diffFilter = delta --color-only

[alias]
    cancel = !git commit -a -m 'Temporary commit for cancel' && git reset --hard HEAD~
    commend = commit --amend --no-edit
    please = push --force-with-lease --force-if-includes
    it = !git init && git commit -m “root” --allow-empty
    stsh = stash --keep-index
    staash = stash --include-untracked
    staaash = stash --all
    shorty = status --short --branch
    grog = log --graph --abbrev-commit --decorate --all --format=format:\"%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)\"
    plog = log --pretty='format:%C(yellow)%h %C(green)%cd %C(reset)%s %C(red)%d %C(cyan)[%an]' --date=format:'%c' --all --graph
    dlog = log --graph --name-status --pretty=format:\"%C(red)%h %C(green)%an %Creset%s %C(yellow)%d%Creset\"

    branches = "!f () {\
        git branch --format=\"%(align:width=8)local%(end) %(align:width=48)%(refname:short)%(end) %(align:width=16)%(committername)%(end)  %(if)%(upstream)%(then)%(upstream:short)%(end)\";\
        git branch --remotes --format=\"%(align:width=8)remote%(end) %(align:width=48)%(refname:short)%(end) %(committername)\";\
    };f"

    swim = "!git branches | sk | awk '{if($1==\"remote\"){print substr($2,match($2,\"/\")+1)}else{print $2}}' | xargs git switch"

    # master or main
    mom = !basename "$(git symbolic-ref --short refs/remotes/origin/HEAD)"
    moom = remote set-head origin --auto

    vacuum = "!f () { git checkout $1; git branch --merged|egrep -v '\\*|develop|main'|xargs git branch -d; git fetch --prune; };f"

    # https://qiita.com/oswhk/items/0883b630f98cc8eb6b08
    blamepr = "!f() { gh pr view -w `git log --merges --oneline --reverse --ancestry-path $1...master | grep 'Merge pull request #' | head -n 1 | cut -f5 -d' ' | sed -e 's%#%%'`; }; f"
    prev = reset HEAD^

    fixup ="!f() { git commit --fixup $1 && GIT_SEQUENCE_EDITOR=: git rebase -i --autosquash --autostash $1^;};f"

    # choose commit
    # https://qiita.com/_yu_yu_yu/items/1617c08e685834ee3f85
    chit = "!f() { git log --graph --color=always --remotes --branches --format=\"%C(auto)%h%d %s %C(white)%C(bold)%cr\" | sk --ansi --no-sort --reverse --tiebreak=index --bind=ctrl-s:toggle-sort | grep -o '[a-f0-9]\\{7\\}';}; f"

    fix ="!git chit | xargs git fixup"

[push]
    default = current
[pull]
    ff = only
[merge]
    conflictStyle = diff3
[init]
    defaultBranch = master

[diff]
    algorithm = histogram
[gpg]
    program = /opt/homebrew/bin/gpg
    format = ssh
