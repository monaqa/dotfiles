# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet pudb "python debugger" b
import pudb; pudb.set_trace()
endsnippet

snippet fold "fold block" b
# ${1} {{{
$0
# }}}
endsnippet

snippet sep "separator" b
# %%
$0
endsnippet

snippet md "markdown block" b
# %% [markdown]
"""
$1
"""

# %%
$0
endsnippet

snippet todo "not implemented" b
raise NotImplementedError("${1:Not implemented yet.}")
endsnippet

snippet __main "__name__ == '__main__'" b
def main():
	"""Main function.
	"""
	pass


if __name__ == "__main__":
	main()
endsnippet

# snippet Param "Numpy-style docstring: Param" b
# Parameters
# ----------
# $0
# endsnippet
# 
# snippet Attr "Numpy-style docstring: Attr" b
# Attributes
# ----------
# $0
# endsnippet
# 
# snippet Return "Numpy-style docstring: Return" b
# Returns
# -------
# $0
# endsnippet
# 
# snippet Exam "Numpy-style docstring: Exam" b
# Examples
# --------
# >>> $0
# endsnippet
