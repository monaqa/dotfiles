# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet ifthen "if ... then" b
if ${1:true} then
	$0
end
endsnippet

snippet fpair "for pairs" b
for ${1:key}, ${2:value} in pairs(${3:list}) do
	$0
end
endsnippet

snippet fipair "for ipairs" b
for ${1:_}, ${2:value} in ipairs(${3:list}) do
	$0
end
endsnippet

snippet function "function" b
local function ${1:func_name}($2)
	$0
end
endsnippet

snippet function "anonymous function" w
function($2)
	$0
end
endsnippet

snippet nnoremap "vim.keymap.set (normal)" b
vim.keymap.set("n", "$1", "$2")
endsnippet

snippet inoremap "vim.keymap.set (normal)" b
vim.keymap.set("i", "$1", "$2")
endsnippet

snippet cnoremap "vim.keymap.set (normal)" b
vim.keymap.set("c", "$1", "$2")
endsnippet

snippet xnoremap "vim.keymap.set (normal)" b
vim.keymap.set("x", "$1", "$2")
endsnippet

snippet onoremap "vim.keymap.set (normal)" b
vim.keymap.set("o", "$1", "$2")
endsnippet

snippet noremap "vim.keymap.set (normal)" b
vim.keymap.set({"n", "x", "o"}, "$1", "$2")
endsnippet

snippet command "Description" b
vim.api.nvim_create_user_command("$1", function ()
	$0
end, {})
endsnippet

snippet block "Lua block" w
(function()
	$0
end)()
endsnippet
